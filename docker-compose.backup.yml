version: "3"
services:
  ## Database postgres
  postgres:
    image: postgres:14.1-alpine
    restart: always
    container_name: database
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    ports:
      - "5432:5432"
    volumes:
      - db:/var/lib/postgresql/data

  ## Server .Net6.0
  dotnetclean:
    image: dotnetclean
    container_name: dotnetclean
    restart: always
    build:
      context: ./Api/Boardgame/
      dockerfile: Dockerfile.prod
    depends_on:
      - postgres
      # postgres:
      #   condition: service_healthy
    environment:
      - DOTNET_USE_POLLING_FILE_WATCHER=true
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__DefaultConnection=Host=host.docker.internal;Username=postgres;Password=postgres;Database=postgres
    ports:
      - "8000:8000"
    volumes:
      - ./Api/Boardgame/Boardgame.Api/:/app/Boardgame.Api
      - ./Api/Boardgame/Boardgame.Infrastructure/:/app/Boardgame.Infrastructure
      - ./Api/Boardgame/Boardgame.Application/:/app/Boardgame.Application
      - ./Api/Boardgame/Boardgame.Domain/:/app/Boardgame.Domain
  nginx:
    container_name: nginx
    image: nginx:latest
    volumes:
      - ./Api/Boardgame/conf.d:/etc/nginx/conf.d
    depends_on:
      - dotnetclean
    ports:
      - "8000:8000"

  # Web client boardgame
  webapp:
    image: webboardgame
    container_name: webboardgame
    build:
      context: ./frontend
      target: prod
    depends_on:
      - dotnetclean
    ports:
      - "3000:3000"
      - "3001:3001"
    environment:
      - CHOKIDAR_USEPOLLING=true
    volumes:
      - ./frontend/src:/app/src

  ## Web client webadmin
  webadmin:
    image: webadmin
    container_name: webadmin
    build:
      context: ./webadmin
      target: prod
    depends_on:
      - dotnetclean
    ports:
      - "5000:5000"
      - "5001:5001"
    environment:
      - CHOKIDAR_USEPOLLING=true
    volumes:
      - ./webadmin/src:/app/src

volumes:
  db:
    driver: local
